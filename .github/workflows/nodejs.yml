name: NodeJS Testing

on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
    branches:
      - "*"

jobs:
  node_test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Node.JS 12.x
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - name: Install Node Dependencies
        run: npm install
        env:
          CI: TRUE
      - name: Save Code Linting Report JSON
        # npm script for ESLint
        # eslint --output-file eslint_report.json --format json src
        # See https://eslint.org/docs/user-guide/command-line-interface#options
        run: npm run lint:report
        continue-on-error: true
      - name: Annotate Code Linting Results
        uses: ataylorme/eslint-annotate-action@1.0.4
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          report-json: "eslint_report.json"
      - name: Upload ESLint report
        uses: actions/upload-artifact@v1
        with:
          name: eslint_report.json
          path: eslint_report.json
      - name: Test That The Project Builds
        run: npm run build
      - name: Save a zip of the build project
        id: zip
        uses: ataylorme/npm-pack-zip-action@master
      - uses: actions/upload-artifact@v1
        with:
          name: npm-pack-zip
          path: ${{ steps.zip.outputs.zip-path }}
      - name: Create Release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.zip.outputs.zip-path }}
          asset_name: ${{ github.ref }}.zip
          asset_content_type: application/zip